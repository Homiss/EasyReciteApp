package com.adm.dictionary.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.adm.dictionary.entity.Part;
import com.adm.dictionary.entity.QuestionBean;
import com.adm.dictionary.entity.WordBean;

import com.adm.dictionary.dao.PartDao;
import com.adm.dictionary.dao.QuestionBeanDao;
import com.adm.dictionary.dao.WordBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig partDaoConfig;
    private final DaoConfig questionBeanDaoConfig;
    private final DaoConfig wordBeanDaoConfig;

    private final PartDao partDao;
    private final QuestionBeanDao questionBeanDao;
    private final WordBeanDao wordBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        partDaoConfig = daoConfigMap.get(PartDao.class).clone();
        partDaoConfig.initIdentityScope(type);

        questionBeanDaoConfig = daoConfigMap.get(QuestionBeanDao.class).clone();
        questionBeanDaoConfig.initIdentityScope(type);

        wordBeanDaoConfig = daoConfigMap.get(WordBeanDao.class).clone();
        wordBeanDaoConfig.initIdentityScope(type);

        partDao = new PartDao(partDaoConfig, this);
        questionBeanDao = new QuestionBeanDao(questionBeanDaoConfig, this);
        wordBeanDao = new WordBeanDao(wordBeanDaoConfig, this);

        registerDao(Part.class, partDao);
        registerDao(QuestionBean.class, questionBeanDao);
        registerDao(WordBean.class, wordBeanDao);
    }
    
    public void clear() {
        partDaoConfig.clearIdentityScope();
        questionBeanDaoConfig.clearIdentityScope();
        wordBeanDaoConfig.clearIdentityScope();
    }

    public PartDao getPartDao() {
        return partDao;
    }

    public QuestionBeanDao getQuestionBeanDao() {
        return questionBeanDao;
    }

    public WordBeanDao getWordBeanDao() {
        return wordBeanDao;
    }

}
